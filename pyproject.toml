[tool.poetry]
name = "rose_server"
version = "0.1.0"
description = "ROSE - Run your own LLM server"
authors = ["Garden Variety AI"]
readme = "README.md"
packages = [
    {include = "rose_server", from = "src"},
    {include = "rose_trainer", from = "src"},
    {include = "rose_inference", from = "src"},
    {include = "rose_cli", from = "src"}
]

[tool.poetry.scripts]
rose = "rose_cli.main:main"
rose-server = "rose_server.main:main"
rose-trainer = "rose_trainer.scheduler:main"
rose-trainer-worker = "rose_trainer.worker:main"
rose-inference = "rose_inference.main:main"

[tool.poetry.dependencies]
python = ">=3.13,<4.0"
fastapi = ">=0.110.0"
uvicorn = ">=0.27.1"
pydantic = ">=2.6.3"
sentence-transformers = ">=2.5.1"
numpy = ">=1.26.4"
transformers = "^4.51.2"
sentencepiece = "^0.2.0"
pydantic-settings = "^2.9.1"
chromadb = "^1.0.9"
openai = "^1.88.0"
psutil = "^7.0.0"
torch = "^2.7.0"
peft = "^0.15.2"
accelerate = "^1.7.0"
datasets = "^3.3.0"
sqlalchemy = "^2.0.0"
sqlmodel = "^0.0.24"
sse-starlette = "^2.1.3"
aiosqlite = "^0.21.0"
greenlet = "^3.2.2"
aiofiles = "^24.1.0"
apscheduler = "^3.10.4"
python-multipart = "^0.0.18"
evaluate = "^0.4.5"
mlflow = "^3.1.1"
tokenizers = "^0.21.2"

[tool.poetry.group.cli]
optional = true

[tool.poetry.group.cli.dependencies]
typer = "^0.16.0"
rich = "^13.7.1"
httpx = "^0.28.1"
openai-agents = "^0.0.19"


[tool.poetry.group.nvidia]
optional = true

[tool.poetry.group.nvidia.dependencies]
nvidia-ml-py = "^12.560.30"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.26.0"
httpx = "^0.28.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.11.11"
pre-commit = "^4.2.0"
mypy = "^1.13.0"
types-aiofiles = "^24.1.0.20250606"
types-psutil = "^7.0.0.20250601"
sqlalchemy = {extras = ["mypy"], version = "^2.0.0"}


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/rose_server --cov-report=term-missing"

[tool.ruff]
line-length = 120
target-version = "py313"
fix = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["E", "F", "I"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = false
force-wrap-aliases = true
combine-as-imports = true

[tool.mypy]
python_version = "3.13"
plugins = ["sqlalchemy.ext.mypy.plugin"]
ignore_missing_imports = true
# Strict mode for checked files
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "chromadb.*",
    "sentencepiece.*",
    "peft.*",
    "accelerate.*",
    "datasets.*",
    "sse_starlette.*",
    "apscheduler.*",
    "sentence_transformers.*",
    "nvidia_ml_py.*",
]
ignore_errors = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
