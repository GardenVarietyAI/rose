version: '3.8'

services:
  rose-server:
    build:
      context: .
      dockerfile: Dockerfile.codex
    image: rose-server:latest
    container_name: rose-server
    ports:
      - "8004:8004"
    environment:
      - ROSE_SERVER_HOST=0.0.0.0
      - ROSE_SERVER_PORT=8004
      - ROSE_SERVER_LOG_LEVEL=INFO
      - ROSE_SERVER_RELOAD=false

      - ROSE_SERVER_DEFAULT_MODEL=qwen2.5-0.5b
      - ROSE_SERVER_MAX_CONCURRENT_INFERENCE=2
      - ROSE_SERVER_MODEL_CACHE_DIR=/app/data/models

      - ROSE_SERVER_CHROMADB_HOST=chromadb
      - ROSE_SERVER_CHROMADB_PORT=8000
      - ROSE_SERVER_CHROMADB_PATH=/app/data/chroma

      - ROSE_SERVER_DATA_DIR=/app/data
      - ROSE_SERVER_FINE_TUNING_CHECKPOINT_DIR=/app/data/fine_tuning_checkpoints

    volumes:
      - ./data:/app/data
      - model-cache:/app/data/models
      - ./src:/app/src:ro
      - ~/.cache/huggingface:/root/.cache/huggingface
    depends_on:
      - chromadb
    restart: unless-stopped

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports:
      - "8003:8000"
    volumes:
      - chromadb-data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=false
    restart: unless-stopped

  rose-server-dev:
    image: ghcr.io/openai/codex-universal:latest
    container_name: rose-server-dev
    profiles: ["dev"]
    ports:
      - "8005:8004"
    working_dir: /app
    environment:
      - CODEX_ENV_PYTHON_VERSION=3.13
      - PYTHONPATH=/app/src
      - ROSE_SERVER_HOST=0.0.0.0
      - ROSE_SERVER_PORT=8004
      - ROSE_SERVER_CHROMADB_HOST=chromadb
      - ROSE_SERVER_CHROMADB_PORT=8000
    volumes:
      - .:/app
      - model-cache:/app/data/models
    command: |
      bash -c "
        cd /app &&
        poetry install --no-interaction &&
        poetry run python -m rose_server.main
      "
    depends_on:
      - chromadb
    stdin_open: true
    tty: true

  worker:
    build:
      context: .
      dockerfile: Dockerfile.codex
    image: rose-server:latest
    container_name: llm-worker
    profiles: ["worker"]
    environment:
      - PYTHONPATH=/app/src
      - ROSE_SERVER_DATA_DIR=/app/data
      - ROSE_SERVER_MODEL_CACHE_DIR=/app/data/models
    volumes:
      - ./data:/app/data
      - model-cache:/app/data/models
      - ./src:/app/src:ro
    command: ["python", "-m", "rose_server.worker"]
    depends_on:
      - rose-server
    restart: unless-stopped

volumes:
  model-cache:
    driver: local
  chromadb-data:
    driver: local